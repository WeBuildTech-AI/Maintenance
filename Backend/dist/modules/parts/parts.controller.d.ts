import { PaginationQueryDto } from '../../common/dto/pagination-query.dto';
import { CreatePartDto } from './dto/create-part.dto';
import { UpdatePartDto } from './dto/update-part.dto';
import { PartsService } from './parts.service';
export declare class PartsController {
    private readonly partsService;
    constructor(partsService: PartsService);
    findAll(_pagination: PaginationQueryDto): Promise<{
        description: string | null;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        organizationId: string;
        name: string;
        files: string[];
        teamsInCharge: string[];
        qrCode: string | null;
        location: import("@prisma/client/runtime/library").JsonValue | null;
        assetIds: string[];
        vendorIds: string[];
        photos: string[];
        unitCost: number | null;
        partsType: string[];
    }[]>;
    findOne(id: string): Promise<{
        description: string | null;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        organizationId: string;
        name: string;
        files: string[];
        teamsInCharge: string[];
        qrCode: string | null;
        location: import("@prisma/client/runtime/library").JsonValue | null;
        assetIds: string[];
        vendorIds: string[];
        photos: string[];
        unitCost: number | null;
        partsType: string[];
    }>;
    create(body: CreatePartDto): Promise<{
        description: string | null;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        organizationId: string;
        name: string;
        files: string[];
        teamsInCharge: string[];
        qrCode: string | null;
        location: import("@prisma/client/runtime/library").JsonValue | null;
        assetIds: string[];
        vendorIds: string[];
        photos: string[];
        unitCost: number | null;
        partsType: string[];
    }>;
    update(id: string, body: UpdatePartDto): Promise<{
        description: string | null;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        organizationId: string;
        name: string;
        files: string[];
        teamsInCharge: string[];
        qrCode: string | null;
        location: import("@prisma/client/runtime/library").JsonValue | null;
        assetIds: string[];
        vendorIds: string[];
        photos: string[];
        unitCost: number | null;
        partsType: string[];
    }>;
    remove(id: string): Promise<{
        description: string | null;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        organizationId: string;
        name: string;
        files: string[];
        teamsInCharge: string[];
        qrCode: string | null;
        location: import("@prisma/client/runtime/library").JsonValue | null;
        assetIds: string[];
        vendorIds: string[];
        photos: string[];
        unitCost: number | null;
        partsType: string[];
    }>;
}
