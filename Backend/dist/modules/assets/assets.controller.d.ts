import { PaginationQueryDto } from '../../common/dto/pagination-query.dto';
import { AssetsService } from './assets.service';
import { CreateAssetDto } from './dto/create-asset.dto';
import { UpdateAssetDto } from './dto/update-asset.dto';
export declare class AssetsController {
    private readonly assetsService;
    constructor(assetsService: AssetsService);
    findAll(_pagination: PaginationQueryDto): Promise<{
        name: string;
        id: string;
        organizationId: string;
        description: string | null;
        pictures: string[];
        files: string[];
        locationId: string | null;
        criticality: import(".prisma/client").$Enums.AssetCriticality | null;
        year: number | null;
        warrantyDate: Date | null;
        isUnderWarranty: boolean | null;
        isUnderAmc: boolean | null;
        manufacturer: string | null;
        model: string | null;
        serialNumber: string | null;
        teamsInCharge: string[];
        qrCode: string | null;
        assetTypeId: string | null;
        vendorId: string | null;
        partIds: string[];
        parentAssetId: string | null;
        createdAt: Date;
        updatedAt: Date;
    }[]>;
    findOne(id: string): Promise<{
        name: string;
        id: string;
        organizationId: string;
        description: string | null;
        pictures: string[];
        files: string[];
        locationId: string | null;
        criticality: import(".prisma/client").$Enums.AssetCriticality | null;
        year: number | null;
        warrantyDate: Date | null;
        isUnderWarranty: boolean | null;
        isUnderAmc: boolean | null;
        manufacturer: string | null;
        model: string | null;
        serialNumber: string | null;
        teamsInCharge: string[];
        qrCode: string | null;
        assetTypeId: string | null;
        vendorId: string | null;
        partIds: string[];
        parentAssetId: string | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    create(body: CreateAssetDto): Promise<{
        name: string;
        id: string;
        organizationId: string;
        description: string | null;
        pictures: string[];
        files: string[];
        locationId: string | null;
        criticality: import(".prisma/client").$Enums.AssetCriticality | null;
        year: number | null;
        warrantyDate: Date | null;
        isUnderWarranty: boolean | null;
        isUnderAmc: boolean | null;
        manufacturer: string | null;
        model: string | null;
        serialNumber: string | null;
        teamsInCharge: string[];
        qrCode: string | null;
        assetTypeId: string | null;
        vendorId: string | null;
        partIds: string[];
        parentAssetId: string | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    update(id: string, body: UpdateAssetDto): Promise<{
        name: string;
        id: string;
        organizationId: string;
        description: string | null;
        pictures: string[];
        files: string[];
        locationId: string | null;
        criticality: import(".prisma/client").$Enums.AssetCriticality | null;
        year: number | null;
        warrantyDate: Date | null;
        isUnderWarranty: boolean | null;
        isUnderAmc: boolean | null;
        manufacturer: string | null;
        model: string | null;
        serialNumber: string | null;
        teamsInCharge: string[];
        qrCode: string | null;
        assetTypeId: string | null;
        vendorId: string | null;
        partIds: string[];
        parentAssetId: string | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    remove(id: string): Promise<{
        name: string;
        id: string;
        organizationId: string;
        description: string | null;
        pictures: string[];
        files: string[];
        locationId: string | null;
        criticality: import(".prisma/client").$Enums.AssetCriticality | null;
        year: number | null;
        warrantyDate: Date | null;
        isUnderWarranty: boolean | null;
        isUnderAmc: boolean | null;
        manufacturer: string | null;
        model: string | null;
        serialNumber: string | null;
        teamsInCharge: string[];
        qrCode: string | null;
        assetTypeId: string | null;
        vendorId: string | null;
        partIds: string[];
        parentAssetId: string | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
}
