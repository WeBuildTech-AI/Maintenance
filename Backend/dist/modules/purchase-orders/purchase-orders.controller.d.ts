import { PaginationQueryDto } from '../../common/dto/pagination-query.dto';
import { CreatePurchaseOrderDto } from './dto/create-purchase-order.dto';
import { UpdatePurchaseOrderDto } from './dto/update-purchase-order.dto';
import { PurchaseOrdersService } from './purchase-orders.service';
export declare class PurchaseOrdersController {
    private readonly purchaseOrdersService;
    constructor(purchaseOrdersService: PurchaseOrdersService);
    findAll(_pagination: PaginationQueryDto): Promise<{
        id: string;
        organizationId: string;
        createdAt: Date;
        updatedAt: Date;
        files: string[];
        vendorId: string;
        status: import(".prisma/client").$Enums.PurchaseOrderStatus | null;
        dueDate: Date | null;
        items: import("@prisma/client/runtime/library").JsonValue;
        taxesAndCosts: import("@prisma/client/runtime/library").JsonValue | null;
        shippingAddress: string | null;
        billingAddress: string | null;
        shippingContact: import("@prisma/client/runtime/library").JsonValue | null;
        notes: string | null;
    }[]>;
    findOne(id: string): Promise<{
        id: string;
        organizationId: string;
        createdAt: Date;
        updatedAt: Date;
        files: string[];
        vendorId: string;
        status: import(".prisma/client").$Enums.PurchaseOrderStatus | null;
        dueDate: Date | null;
        items: import("@prisma/client/runtime/library").JsonValue;
        taxesAndCosts: import("@prisma/client/runtime/library").JsonValue | null;
        shippingAddress: string | null;
        billingAddress: string | null;
        shippingContact: import("@prisma/client/runtime/library").JsonValue | null;
        notes: string | null;
    }>;
    create(body: CreatePurchaseOrderDto): Promise<{
        id: string;
        organizationId: string;
        createdAt: Date;
        updatedAt: Date;
        files: string[];
        vendorId: string;
        status: import(".prisma/client").$Enums.PurchaseOrderStatus | null;
        dueDate: Date | null;
        items: import("@prisma/client/runtime/library").JsonValue;
        taxesAndCosts: import("@prisma/client/runtime/library").JsonValue | null;
        shippingAddress: string | null;
        billingAddress: string | null;
        shippingContact: import("@prisma/client/runtime/library").JsonValue | null;
        notes: string | null;
    }>;
    update(id: string, body: UpdatePurchaseOrderDto): Promise<{
        id: string;
        organizationId: string;
        createdAt: Date;
        updatedAt: Date;
        files: string[];
        vendorId: string;
        status: import(".prisma/client").$Enums.PurchaseOrderStatus | null;
        dueDate: Date | null;
        items: import("@prisma/client/runtime/library").JsonValue;
        taxesAndCosts: import("@prisma/client/runtime/library").JsonValue | null;
        shippingAddress: string | null;
        billingAddress: string | null;
        shippingContact: import("@prisma/client/runtime/library").JsonValue | null;
        notes: string | null;
    }>;
}
